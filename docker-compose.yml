version: '3.8'

services:
  # Service Discovery (Eureka Server)
  service-discovery:
    image: registry.hub.docker.com/vinayv456/service-discovery:latest
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Product Service
  product-service:
    image: registry.hub.docker.com/vinayv456/product-service:latest
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/product-service
      - SERVER_PORT=8081
    networks:
      - microservices-network
    depends_on:
      - service-discovery
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
  # Inventory Service Config
  inventory-service:
    container_name: inventory-service
    image: registry.hub.docker.com/vinayv456/inventory-service:latest
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-inventory:3306/inventory_service?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=vinay
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      # - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservices-network
    depends_on:
      - mysql-inventory
      # - zipkin
      - service-discovery
      # - api-gateway

  order-service:
    container_name: order-service
    image: registry.hub.docker.com/vinayv456/order-service:latest
    pull_policy: always
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order:3306/order_service?allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=vinay
      - SPRING_DATASOURCE_PASSWORD=password
      - SERVER_PORT=8082
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - LOGGING_LEVEL_ROOT=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BEANS=DEBUG
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CONTEXT=DEBUG
      # - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      # - SPRING_KAFKA_BOOTSTRAPSERVERS=broker:29092
    networks:
      - microservices-network
    depends_on:
      - mysql-order
      # - broker
      # - zipkin
      - service-discovery
      # - api-gateway


  # MongoDB Config for product service
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db
    networks:
      - microservices-network

  # MySQL Config for inventory service
  mysql-inventory:
    container_name: mysql-inventory
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventory_service
      MYSQL_USER: vinay
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql_inventory:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: always
    networks:
      - microservices-network

  mysql-order:
    container_name: mysql-order
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_service
      MYSQL_USER: vinay
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql_order:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: always
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge